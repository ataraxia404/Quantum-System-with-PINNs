{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"gpuType":"T4","authorship_tag":"ABX9TyMOa/UdOyCe06zx+DLa0Pq8"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"oMu39rl66r1E","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1738281709130,"user_tz":180,"elapsed":322695,"user":{"displayName":"Jos√© Nascimento","userId":"16636150507019936186"}},"outputId":"babe23a5-32df-4e59-f584-86dc11428a01"},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-1-df9aad4cf876>:62: UserWarning: Casting complex values to real discards the imaginary part (Triggered internally at ../aten/src/ATen/native/Copy.cpp:308.)\n","  y_train_tensor = torch.tensor(y_train, dtype=torch.float32)\n","<ipython-input-1-df9aad4cf876>:66: ComplexWarning: Casting complex values to real discards the imaginary part\n","  y0_exact = torch.tensor([  A * np.exp(1j * k1 * x) + B * np.exp(-1j * k1 * x)], dtype=torch.float32)\n","<ipython-input-1-df9aad4cf876>:67: ComplexWarning: Casting complex values to real discards the imaginary part\n","  dy_dx0_exact = torch.tensor([ A * 1j * k1 * np.exp(1j * k1 * x) - B * 1j * k1 *  np.exp(-1j * k1 * x)  ], dtype=torch.float32)\n","<ipython-input-1-df9aad4cf876>:70: ComplexWarning: Casting complex values to real discards the imaginary part\n","  yL_exact = torch.tensor([ A + B ], dtype=torch.float32)                # contorno x = L (observe que tanto faz usar psi1(x) ou ps2(x) em x= L = 0\n","<ipython-input-1-df9aad4cf876>:98: ComplexWarning: Casting complex values to real discards the imaginary part\n","  y0_exact = torch.tensor([  C + D  ], dtype=torch.float32)\n","<ipython-input-1-df9aad4cf876>:99: ComplexWarning: Casting complex values to real discards the imaginary part\n","  dy_dx0_exact = torch.tensor([ (C - D)*k2  ], dtype=torch.float32)\n","<ipython-input-1-df9aad4cf876>:102: ComplexWarning: Casting complex values to real discards the imaginary part\n","  yL_exact = torch.tensor([ C * np.exp(k2 * x_beta) + D * np.exp(-k2*x_beta) ], dtype=torch.float32)\n","<ipython-input-1-df9aad4cf876>:131: ComplexWarning: Casting complex values to real discards the imaginary part\n","  y0_exact = torch.tensor([  E * np.exp(1j * k1 * x_beta) + F * np.exp(-1j * k1 * x_beta)  ], dtype=torch.float32)\n","<ipython-input-1-df9aad4cf876>:132: ComplexWarning: Casting complex values to real discards the imaginary part\n","  dy_dx0_exact = torch.tensor([   E * 1j* k1 * np.exp(1j * k1 * x_beta) - F * 1j* k1 * np.exp(-1j * k1 * x_beta)  ], dtype=torch.float32)\n","<ipython-input-1-df9aad4cf876>:135: ComplexWarning: Casting complex values to real discards the imaginary part\n","  yL_exact = torch.tensor([ E * np.exp(1j * k1 * x_alpha) + F * np.exp(-1j * k1 * x_alpha) ], dtype=torch.float32)\n","<ipython-input-1-df9aad4cf876>:166: ComplexWarning: Casting complex values to real discards the imaginary part\n","  y0_exact = torch.tensor([  G * np.exp(k3 * x_alpha) + H * np.exp(-k3 * x_alpha)  ], dtype=torch.float32)\n","<ipython-input-1-df9aad4cf876>:167: ComplexWarning: Casting complex values to real discards the imaginary part\n","  dy_dx0_exact = torch.tensor([  G * k3 * np.exp(k3 * x_alpha) - H * k3 *  np.exp(-k3 * x_alpha)   ], dtype=torch.float32)\n","<ipython-input-1-df9aad4cf876>:170: ComplexWarning: Casting complex values to real discards the imaginary part\n","  yL_exact = torch.tensor([ G * np.exp(k3 * x_gama) + H * np.exp(-k3 * x_gama) ], dtype=torch.float32)\n","<ipython-input-1-df9aad4cf876>:198: ComplexWarning: Casting complex values to real discards the imaginary part\n","  y0_exact = torch.tensor([  I * np.exp(1j * k1 * x_gama) ], dtype=torch.float32)\n","<ipython-input-1-df9aad4cf876>:199: ComplexWarning: Casting complex values to real discards the imaginary part\n","  dy_dx0_exact = torch.tensor([  I * 1j * k1 * np.exp(1j * k1 * x_gama)    ], dtype=torch.float32)\n","<ipython-input-1-df9aad4cf876>:202: ComplexWarning: Casting complex values to real discards the imaginary part\n","  yL_exact = torch.tensor([  I * np.exp(1j * k1 * x_L) ], dtype=torch.float32)                # contorno x = L (observe que tanto faz usar psi1(x) ou ps2(x) em x= L = 0\n","/usr/local/lib/python3.10/dist-packages/matplotlib/cbook.py:1699: ComplexWarning: Casting complex values to real discards the imaginary part\n","  return math.isfinite(val)\n","/usr/local/lib/python3.10/dist-packages/matplotlib/cbook.py:1345: ComplexWarning: Casting complex values to real discards the imaginary part\n","  return np.asarray(x, float)\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 700x1000 with 2 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["import torch\n","import numpy as np\n","import torch.nn as nn\n","import torch.optim as optim\n","import matplotlib.pyplot as plt\n","\n","\n","Energy = 1   # energia da part√≠cula\n","V1 = 2       # potencial da primeira barreira\n","V2 = 2       # potencial da segunda barreira\n","h = 1        # constante de Planck\n","m = 1        # massa da part√≠cula\n","x = -20\n","x_0 = 0\n","\n","x_beta =  3                        # comprimento da primeira barreira\n","x_theta = 3                          # comprimento da segunda barreira\n","x_entre_bar = 10                     # comprimento  entre as barreiras\n","x_alpha = x_entre_bar + x_beta       # extremidade esquerda d,,,,a primeira barreira\n","x_gama = x_alpha + x_theta           # extremidade direita da primeira barreira\n","x_L = x_gama + 20\n","\n","\n","# n√∫meros de ondas das regi√µes\n","k1 =  np.sqrt(2 * m * Energy) /h\n","k2 =  np.sqrt(2 * m * (V1 - Energy)) / h\n","k3 =  np.sqrt(2 * m * (V2 - Energy)) / h\n","\n","\n","#np.exp()\n","#amplitudes da onda\n","I = 0.1\n","H = ( np.exp(x_gama * k3) / (2 * k3) ) * (I *np.exp(1j*k1*x_gama )*(k3 - (1j*k1)) )\n","G = ( np.exp(-x_gama * k3) / (2 * k3) ) * (I *np.exp(1j * k1 * x_gama )* (k3 + 1j * k1))\n","F = 0.5* ( 1j*np.exp(1j*x_alpha*k1)/k1 ) * (G * np.exp(x_alpha * k3) * (k3 - 1j*k1) - H * np.exp(-x_alpha * k3) * (k3 + 1j*k1)  )\n","E = -0.5*(1j*np.exp(-1j*x_alpha * k1) /k1 ) * (G * np.exp(x_alpha * k3) * (k3 + 1j*k1) + H * np.exp(-x_alpha * k3) * (1j*k1 - k3) )\n","D = (np.exp(x_beta * k2)/(2*k2)) * (F * np.exp(-1j*x_beta * k1) * (1j * k1 + k2) - E * np.exp(1j*x_beta * k1)*(1j*k1 - k2))\n","C = (np.exp(-x_beta * k2)/(2*k2)) * (F * np.exp(-1j*x_beta * k1) * (k2 -1j*k1) + E * np.exp(1j*x_beta * k1)*(1j*k1 + k2))\n","B = (-1j /(2*k1)) * (D * (k2 + (1j*k1) ) - C * (k2 -1j*k1) )\n","A = (-1j /(2*k1)) * (C * (k2 + (1j*k1) ) - D * (k2 -1j*k1) )\n","\n","\n","#treinamento na IA\n","\n","class OdeSecond(nn.Module):\n","    def __init__(self):\n","        super(OdeSecond, self).__init__()\n","        self.dense1 = nn.Linear(1, 32)\n","        self.dense2 = nn.Linear(32, 32)\n","        self.dense3 = nn.Linear(32, 1)\n","\n","\n","    def forward(self, x):\n","        x = torch.sin(self.dense1(x))\n","        x = torch.sin(self.dense2(x))\n","        return self.dense3(x)\n","\n","\n","# Fun√ß√µes de treinamento  x_beta <= X <= x_alpha  psi(x) =  E * np.exp(1j * k1 * x) + F * np.exp(-1j * k1 * x)\n","def train_step_zero(model, optimizer, loss_fn, x_train, y_train):\n","    x_train_tensor = torch.tensor(x_train, dtype=torch.float32, requires_grad=True)\n","    y_train_tensor = torch.tensor(y_train, dtype=torch.float32)\n","    optimizer.zero_grad()\n","\n","    x0 = torch.tensor([ x ], dtype=torch.float32, requires_grad=True)\n","    y0_exact = torch.tensor([  A * np.exp(1j * k1 * x) + B * np.exp(-1j * k1 * x)], dtype=torch.float32)\n","    dy_dx0_exact = torch.tensor([ A * 1j * k1 * np.exp(1j * k1 * x) - B * 1j * k1 *  np.exp(-1j * k1 * x)  ], dtype=torch.float32)\n","\n","    xL = torch.tensor([ x_0 ], dtype=torch.float32, requires_grad=True)\n","    yL_exact = torch.tensor([ A + B ], dtype=torch.float32)                # contorno x = L (observe que tanto faz usar psi1(x) ou ps2(x) em x= L = 0\n","\n","    y0_NN = model(x0)\n","    dy_dx0_NN = torch.autograd.grad(y0_NN.sum(), x0, create_graph=True)[0]\n","    yL_NN = model(xL)\n","\n","    y_NN = model(x_train_tensor)\n","    dy_dx_NN = torch.autograd.grad(y_NN.sum(), x_train_tensor, create_graph=True)[0]\n","    d2y_dx2_NN = torch.autograd.grad(dy_dx_NN.sum(), x_train_tensor, create_graph=True)[0]\n","\n","    loss = (\n","        loss_fn(y0_NN, y0_exact)\n","        + loss_fn(d2y_dx2_NN, -y_NN * (k1**2))\n","        + loss_fn(dy_dx0_NN, dy_dx0_exact)\n","        + loss_fn(yL_NN, yL_exact))\n","\n","    loss.backward()\n","    optimizer.step()\n","\n","    mse = nn.MSELoss()(y_NN, y_train_tensor)\n","    return loss.item(), mse.item()\n","\n","def train_step_bar1(model, optimizer, loss_fn, x_train, y_train):\n","    x_train_tensor = torch.tensor(x_train, dtype=torch.float32, requires_grad=True)\n","    y_train_tensor = torch.tensor(y_train, dtype=torch.float32)\n","    optimizer.zero_grad()\n","\n","    x0 = torch.tensor([ x_0 ], dtype=torch.float32, requires_grad=True)\n","    y0_exact = torch.tensor([  C + D  ], dtype=torch.float32)\n","    dy_dx0_exact = torch.tensor([ (C - D)*k2  ], dtype=torch.float32)\n","\n","    xL = torch.tensor([  x_beta  ], dtype=torch.float32, requires_grad=True)\n","    yL_exact = torch.tensor([ C * np.exp(k2 * x_beta) + D * np.exp(-k2*x_beta) ], dtype=torch.float32)\n","\n","    y0_NN = model(x0)\n","    dy_dx0_NN = torch.autograd.grad(y0_NN.sum(), x0, create_graph=True)[0]\n","    yL_NN = model(xL)\n","\n","    y_NN = model(x_train_tensor)\n","    dy_dx_NN = torch.autograd.grad(y_NN.sum(), x_train_tensor, create_graph=True)[0]\n","    d2y_dx2_NN = torch.autograd.grad(dy_dx_NN.sum(), x_train_tensor, create_graph=True)[0]\n","\n","    loss = (\n","          loss_fn(y0_NN, y0_exact)\n","        + loss_fn(d2y_dx2_NN, y_NN*(k2**2))\n","        + loss_fn(dy_dx0_NN, dy_dx0_exact)\n","        + loss_fn(yL_NN, yL_exact))\n","\n","    loss.backward()\n","    optimizer.step()\n","\n","    mse = nn.MSELoss()(y_NN, y_train_tensor)\n","    return loss.item(), mse.item()\n","\n","\n","def train_step_one(model, optimizer, loss_fn, x_train, y_train):\n","    x_train_tensor = torch.tensor(x_train, dtype=torch.float32, requires_grad=True)\n","    y_train_tensor = torch.tensor(y_train, dtype=torch.float32)\n","    optimizer.zero_grad()\n","\n","    x0 = torch.tensor([ x_beta ], dtype=torch.float32, requires_grad=True)\n","    y0_exact = torch.tensor([  E * np.exp(1j * k1 * x_beta) + F * np.exp(-1j * k1 * x_beta)  ], dtype=torch.float32)\n","    dy_dx0_exact = torch.tensor([   E * 1j* k1 * np.exp(1j * k1 * x_beta) - F * 1j* k1 * np.exp(-1j * k1 * x_beta)  ], dtype=torch.float32)\n","\n","    xL = torch.tensor([ x_alpha ], dtype=torch.float32, requires_grad=True)\n","    yL_exact = torch.tensor([ E * np.exp(1j * k1 * x_alpha) + F * np.exp(-1j * k1 * x_alpha) ], dtype=torch.float32)\n","\n","    y0_NN = model(x0)\n","    dy_dx0_NN = torch.autograd.grad(y0_NN.sum(), x0, create_graph=True)[0]\n","    yL_NN = model(xL)\n","\n","    y_NN = model(x_train_tensor)\n","    dy_dx_NN = torch.autograd.grad(y_NN.sum(), x_train_tensor, create_graph=True)[0]\n","    d2y_dx2_NN = torch.autograd.grad(dy_dx_NN.sum(), x_train_tensor, create_graph=True)[0]\n","\n","    loss = (\n","         loss_fn(y0_NN, y0_exact)\n","        + loss_fn(d2y_dx2_NN, -y_NN * (k1**2))\n","        + loss_fn(dy_dx0_NN, dy_dx0_exact)\n","        + loss_fn(yL_NN, yL_exact))\n","\n","    loss.backward()\n","    optimizer.step()\n","\n","    mse = nn.MSELoss()(y_NN, y_train_tensor)\n","    return loss.item(), mse.item()\n","\n","\n","\n","\n","def train_step_bar2(model, optimizer, loss_fn, x_train, y_train):\n","    x_train_tensor = torch.tensor(x_train, dtype=torch.float32, requires_grad=True)\n","    y_train_tensor = torch.tensor(y_train, dtype=torch.float32)\n","    optimizer.zero_grad()\n","\n","    x0 = torch.tensor([  x_alpha  ], dtype=torch.float32, requires_grad=True)\n","    y0_exact = torch.tensor([  G * np.exp(k3 * x_alpha) + H * np.exp(-k3 * x_alpha)  ], dtype=torch.float32)\n","    dy_dx0_exact = torch.tensor([  G * k3 * np.exp(k3 * x_alpha) - H * k3 *  np.exp(-k3 * x_alpha)   ], dtype=torch.float32)\n","\n","    xL = torch.tensor([  x_gama ], dtype=torch.float32, requires_grad=True)\n","    yL_exact = torch.tensor([ G * np.exp(k3 * x_gama) + H * np.exp(-k3 * x_gama) ], dtype=torch.float32)\n","\n","    y0_NN = model(x0)\n","    dy_dx0_NN = torch.autograd.grad(y0_NN.sum(), x0, create_graph=True)[0]\n","    yL_NN = model(xL)\n","\n","    y_NN = model(x_train_tensor)\n","    dy_dx_NN = torch.autograd.grad(y_NN.sum(), x_train_tensor, create_graph=True)[0]\n","    d2y_dx2_NN = torch.autograd.grad(dy_dx_NN.sum(), x_train_tensor, create_graph=True)[0]\n","\n","    loss = (\n","          loss_fn(y0_NN, y0_exact)\n","        + loss_fn(d2y_dx2_NN, y_NN * (k3**2))\n","        + loss_fn(dy_dx0_NN, dy_dx0_exact)\n","        + loss_fn(yL_NN, yL_exact))\n","\n","    loss.backward()\n","    optimizer.step()\n","\n","    mse = nn.MSELoss()(y_NN, y_train_tensor)\n","    return loss.item(), mse.item()\n","\n","def train_step_three(model, optimizer, loss_fn, x_train, y_train):\n","    x_train_tensor = torch.tensor(x_train, dtype=torch.float32, requires_grad=True)\n","    y_train_tensor = torch.tensor(y_train, dtype=torch.float32)\n","    optimizer.zero_grad()\n","\n","    x0 = torch.tensor([ x_gama ], dtype=torch.float32, requires_grad=True)\n","    y0_exact = torch.tensor([  I * np.exp(1j * k1 * x_gama) ], dtype=torch.float32)\n","    dy_dx0_exact = torch.tensor([  I * 1j * k1 * np.exp(1j * k1 * x_gama)    ], dtype=torch.float32)\n","\n","    xL = torch.tensor([ x_L ], dtype=torch.float32, requires_grad=True)\n","    yL_exact = torch.tensor([  I * np.exp(1j * k1 * x_L) ], dtype=torch.float32)                # contorno x = L (observe que tanto faz usar psi1(x) ou ps2(x) em x= L = 0\n","\n","    y0_NN = model(x0)\n","    dy_dx0_NN = torch.autograd.grad(y0_NN.sum(), x0, create_graph=True)[0]\n","    yL_NN = model(xL)\n","\n","    y_NN = model(x_train_tensor)\n","    dy_dx_NN = torch.autograd.grad(y_NN.sum(), x_train_tensor, create_graph=True)[0]\n","    d2y_dx2_NN = torch.autograd.grad(dy_dx_NN.sum(), x_train_tensor, create_graph=True)[0]\n","\n","    loss = (\n","        loss_fn(y0_NN, y0_exact)\n","        + loss_fn(d2y_dx2_NN, -y_NN * (k1**2))\n","        + loss_fn(dy_dx0_NN, dy_dx0_exact)\n","        + loss_fn(yL_NN, yL_exact))\n","\n","    loss.backward()\n","    optimizer.step()\n","\n","    mse = nn.MSELoss()(y_NN, y_train_tensor)\n","    return loss.item(), mse.item()\n","\n","\n","\n","# FALTA AQUI\n","\n","# Fun√ß√£o para plotar as solu√ß√µes\n","def plot_combined_solution(model0, model_bar1, model1, model_bar2, model3, x_train0, y_train0, x_train_bar1,\n","                           y_train_bar1, x_train1, y_train1, x_train_bar2, y_train_bar2,   x_train3, y_train3,\n","                           loss_0,loss_bar1, loss_1, loss_bar2,  loss_3, mse):\n","    model0.eval()\n","    model_bar1.eval()\n","    model1.eval()\n","    model_bar2.eval()\n","    model3.eval()\n","\n","    x_test_tensor_0 = torch.linspace(x, x_0, 60).unsqueeze(1)\n","    x_test_tensor_bar1 = torch.linspace(x_0, x_beta, 15).unsqueeze(1)\n","    x_test_tensor_1 = torch.linspace(x_beta, x_alpha, 30).unsqueeze(1)\n","    x_test_tensor_bar2 = torch.linspace(x_alpha, x_gama, 15).unsqueeze(1)\n","    x_test_tensor_3 = torch.linspace(x_gama, x_L, 30).unsqueeze(1)\n","\n","\n","    with torch.no_grad():\n","        y_pred_0 = model0(x_test_tensor_0).numpy()\n","        y_pred_bar1 = model_bar1(x_test_tensor_bar1 ).numpy()\n","        y_pred_1 = model1(x_test_tensor_1).numpy()\n","        y_pred_bar2 = model_bar2( x_test_tensor_bar2).numpy()\n","        y_pred_3 = model3(x_test_tensor_3).numpy()\n","\n","\n","\n","    fig, ax = plt.subplots(2, 1, figsize=(7, 10))\n","    plt.rcParams['figure.dpi'] = 200\n","\n","    alpha = 0.4\n","    ax[0].plot(x_train0, y_train0  , color='red', markersize=7, label='Analytic solution')\n","    ax[0].plot(x_test_tensor_0.numpy(), y_pred_0, '.', alpha, markersize=2, color='black', label = 'Predicted Solution')\n","    ax[0].set_xlim(min(x_train0), max(x_train3))\n","\n","    ax[0].plot( x_train_bar1, y_train_bar1  ,markersize=7, color='red')\n","    ax[0].plot(x_test_tensor_bar1.numpy(), y_pred_bar1, 'o', alpha, markersize=2, color='black')\n","\n","    ax[0].plot(x_train1, y_train1, markersize=7, color='red')\n","    ax[0].plot(x_test_tensor_1.numpy(),  y_pred_1 , 'o',alpha, markersize=2, color='black')\n","\n","    ax[0].plot( x_train_bar2, y_train_bar2  ,markersize=7, color='red')\n","    ax[0].plot(x_test_tensor_bar2.numpy(), y_pred_bar2, 'o', alpha, markersize=2, color='black')\n","\n","    ax[0].plot(x_train3, y_train3 ,markersize=7, color='red')\n","    ax[0].plot(x_test_tensor_3.numpy(),  y_pred_3, 'o', alpha, markersize=2, color='black')\n","\n","    #ax[0].axhline(0, color='black',linewidth=0.6)\n","    #ax[0].axhline(Energy, color='red',linewidth=0.6)\n","    ax[0].axvspan(0, x_beta, color='blue', alpha=0.4, label= r' Barrier 1, $V_{_1}$ = 'f'{V1}')\n","    ax[0].axvspan(x_alpha, x_gama, color='green', alpha=0.3, label= r' Barrier 2, $V_{_2}$ = 'f'{V2}')\n","    ax[0].set_xlabel('x')\n","    ax[0].set_ylabel(r'$\\psi(x)$')\n","    ax[0].legend()\n","\n","    # Subplot 2: Gr√°fico dos valores de perda\n","\n","    #ax[1].plot(loss_0, label='Regi√£o I', color='black')\n","    #ax[1].plot(loss_bar1, label='Barreira I', color='green')\n","    #ax[1].plot(loss_1, label='Regi√£o I', color='orange')\n","    #ax[1].plot(loss_bar2, label='Barreira II', color='blue')\n","    ax[1].plot(loss_3, label='Total Loss', color='black')\n","    ax[1].plot(mse, label=\"MSE\", color=\"Blue\")\n","    ax[1].set_yscale('log')\n","    ax[1].set_xlabel('Epoch')\n","    ax[1].set_ylabel('Loss')\n","    ax[1].legend(loc='best', fontsize=8)\n","    ax[1].set_xlim(0, len(loss_3))\n","\n","    plt.tight_layout()\n","    plt.show()\n","\n","# Execu√ß√£o do c√≥digo\n","if __name__ == \"__main__\":\n","\n","    # Treinamento para antes da primeira barreira\n","    epochs = 15000\n","    x_train0 = np.linspace(x, x_0, 200)[:, np.newaxis]\n","    y_train0 = A * np.exp(1j * k1 * x_train0) + B * np.exp(-1j * k1 * x_train0)\n","    model0 = OdeSecond()\n","    optimizer0 = optim.Adam(model0.parameters(), lr=0.01)\n","    loss_fn = nn.MSELoss()\n","\n","\n","    loss_values_0 = []\n","    for epoch in range(epochs):\n","        loss, mse = train_step_zero(model0, optimizer0, loss_fn, x_train0, y_train0)\n","        loss_values_0.append(loss)\n","\n","    #--------------------------------------------------------------------------------------------\n","    #--------------------------------------------------------------------------------------------\n","\n","    # Treinamento para a primeira barreira\n","\n","    x_train_bar1 =  np.linspace(x_0, x_beta, 200)[:, np.newaxis]\n","    y_train_bar1 =  C  * np.exp(k2 * x_train_bar1) + D * np.exp(-k2 * x_train_bar1)\n","    model_bar1 = OdeSecond()\n","    optimizer_bar1 = optim.Adam(model_bar1.parameters(), lr=0.01)\n","    loss_values_bar1 = []\n","\n","    for epoch in range(epochs):\n","        loss, mse = train_step_bar1(model_bar1,  optimizer_bar1, loss_fn, x_train_bar1, y_train_bar1)\n","        loss_values_bar1.append(loss)\n","\n","    #--------------------------------------------------------------------------------------------\n","    #--------------------------------------------------------------------------------------------\n","\n","    # Treinamento para entre as barreiras\n","\n","    x_train1 = np.linspace(x_beta, x_alpha, 200)[:, np.newaxis]\n","    y_train1 = E * np.exp(1j * k1 * x_train1) + F * np.exp(-1j * k1 * x_train1)\n","    model1 = OdeSecond()\n","    optimizer1 = optim.Adam(model1.parameters(), lr=0.01)\n","    loss_fn = nn.MSELoss()\n","\n","    loss_values_1 = []\n","    for epoch in range(epochs):\n","        loss, mse = train_step_one(model1, optimizer1, loss_fn, x_train1, y_train1)\n","        loss_values_1.append(loss)\n","\n","    #--------------------------------------------------------------------------------------------\n","    #--------------------------------------------------------------------------------------------\n","\n","    # Treinamento para a segunda barreira\n","\n","    x_train_bar2 =  np.linspace(x_alpha, x_gama, 200)[:, np.newaxis]\n","    y_train_bar2 =  G  * np.exp(k3 * x_train_bar2) + H * np.exp(-k3  * x_train_bar2)\n","    model_bar2 = OdeSecond()\n","    optimizer_bar2 = optim.Adam(model_bar2.parameters(), lr=0.01)\n","    loss_values_bar2 = []\n","\n","    for epoch in range(epochs):\n","        loss, mse = train_step_bar2(model_bar2, optimizer_bar2, loss_fn, x_train_bar2, y_train_bar2)\n","        loss_values_bar2.append(loss)\n","\n","    #--------------------------------------------------------------------------------------------\n","    #--------------------------------------------------------------------------------------------\n","\n","    # Treinamento para ap√≥s a barreira\n","    x_train3 = np.linspace(x_gama, x_L, 200)[:, np.newaxis]\n","    y_train3 = I * np.exp(1j * k1 * x_train3)\n","    model3 = OdeSecond()\n","    optimizer3 = optim.Adam(model3.parameters(), lr=0.001)\n","    loss_values_3 = []\n","    mse_values_3 = []\n","\n","\n","    for epoch in range(epochs):\n","        loss, mse = train_step_three(model3, optimizer3, loss_fn, x_train3, y_train3)\n","        loss_values_3.append(loss)\n","        mse_values_3.append(mse)\n","\n","\n","\n","\n","\n","    # Plotando ambas as solu√ß√µes e os valores de perda\n","    plot_combined_solution(model0, model_bar1, model1, model_bar2, model3, x_train0, y_train0, x_train_bar1, y_train_bar1, x_train1, y_train1, x_train_bar2, y_train_bar2,   x_train3, y_train3,  loss_values_0,\n","                           loss_values_bar1, loss_values_1,   loss_values_bar2,  loss_values_3,mse_values_3 )\n"]}]}